.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/base/AsterizmNonce.tsol, 27
PUSHINT 6001
GETGLOB 2
EQINT 0
THROWANYIFNOT
.loc ../contracts/base/AsterizmNonce.tsol, 28
PUSHINT 6002
GETGLOB 10
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWANYIFNOT
.loc ../contracts/base/AsterizmNonce.tsol, 29
PUSHINT 10000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/base/AsterizmNonce.tsol, 30
PUSHREF {
	.blob xc00000000000000000000000006de422e1
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/base/AsterizmNonce.tsol, 31
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/base/AsterizmNonce.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getNonce
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/base/AsterizmNonce.tsol, 36
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/base/AsterizmNonce.tsol, 0
CALLREF {
	CALL $getNonce_d087d288_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3891119649
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getNonce_d087d288_internal_macro
.loc ../contracts/base/AsterizmNonce.tsol, 36
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc ../contracts/base/AsterizmNonce.tsol, 37
PUSHINT 10000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/base/AsterizmNonce.tsol, 38
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 15
.loc ../contracts/base/AsterizmNonce.tsol, 0

.globl	_inrreaceNoncePrivate_55bc9fff_internal
.type	_inrreaceNoncePrivate_55bc9fff_internal, @function
CALL $_inrreaceNoncePrivate_55bc9fff_internal_macro$

.macro _inrreaceNoncePrivate_55bc9fff_internal_macro
.loc ../contracts/base/AsterizmNonce.tsol, 43
GETGLOB 15
INC
DUP
SETGLOB 15
DUP
SETGLOB 15
.loc ../contracts/base/AsterizmNonce.tsol, 44
PUSHSLICE xc0000000000000000000000000254399af
NEWC
STSLICE
STU 256
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/base/AsterizmNonce.tsol, 0

.macro increaseNonce
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/base/AsterizmNonce.tsol, 50
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 256
ENDS
.loc ../contracts/base/AsterizmNonce.tsol, 0
CALLREF {
	CALL $increaseNonce_79f7573a_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	XCHG S2
	NEWC
	STSLICECONST x9c22c3c1
	STU 256
	STU 256
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	XCHG S2
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 256
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro increaseNonce_79f7573a_internal_macro
.loc ../contracts/base/AsterizmNonce.tsol, 50
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc ../contracts/base/AsterizmOwnable.tsol, 12
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1001
.loc ../contracts/base/AsterizmNonce.tsol, 51
PUSHINT 10000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/base/AsterizmNonce.tsol, 52
CALLREF {
	CALL $_inrreaceNoncePrivate_55bc9fff_internal_macro$
}
.loc ../contracts/base/AsterizmNonce.tsol, 54
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 15
.loc ../contracts/base/AsterizmNonce.tsol, 0

.macro increaseNonceWithValidation
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/base/AsterizmNonce.tsol, 61
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDU 256
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 256
}
IFELSE
LDU 256
ENDS
.loc ../contracts/base/AsterizmNonce.tsol, 0
CALLREF {
	CALL $increaseNonceWithValidation_3745b64c_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	XCHG S2
	NEWC
	STSLICECONST xae4cd4d9
	STU 256
	STU 256
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	XCHG S2
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 256
	STU 256
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro increaseNonceWithValidation_3745b64c_internal_macro
.loc ../contracts/base/AsterizmNonce.tsol, 61
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc ../contracts/base/AsterizmOwnable.tsol, 12
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1001
.loc ../contracts/base/AsterizmNonce.tsol, 62
PUSHINT 10000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/base/AsterizmNonce.tsol, 63
PUSHINT 6003
SWAP
GETGLOB 15
INC
EQUAL
THROWANYIFNOT
.loc ../contracts/base/AsterizmNonce.tsol, 64
CALLREF {
	CALL $_inrreaceNoncePrivate_55bc9fff_internal_macro$
}
.loc ../contracts/base/AsterizmNonce.tsol, 66
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 15
.loc ../contracts/base/AsterizmNonce.tsol, 0

.globl	owner_8da5cb5b_internal
.type	owner_8da5cb5b_internal, @function
CALL $owner_8da5cb5b_internal_macro$

.macro owner_8da5cb5b_internal_macro
.loc ../contracts/base/AsterizmOwnable.tsol, 19
GETGLOB 10
.loc ../contracts/base/AsterizmOwnable.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDU 64
LDREF
ENDS
CTOS
LDU 256
LDU 256
LDI 1
LDU 256
ENDS
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 2
	PUSH S2
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHINT 3
	PUSH S3
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	PUSHINT 4
	PUSH S4
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 256
	}
	IF
	PUSHINT 5
	PUSH S5
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDI 1
	}
	IF
	PUSHINT 0
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
STU 64
ROLLREV 4
NEWC
STU 256
STU 256
STI 1
STU 256
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 472040385
EQUAL
IFJMPREF {
	CALL $increaseNonce$
}
DUP
PUSHINT 776787161
EQUAL
IFJMPREF {
	CALL $increaseNonceWithValidation$
}
DUP
PUSHINT 1743636001
EQUAL
IFJMPREF {
	CALL $getNonce$
}
DUP
PUSHINT 1756716863
EQUAL
IFJMPREF {
	CALL $constructor$
}

